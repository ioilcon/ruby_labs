# 5, 7, 14

# 5

def string_shuffle(str)
    str.chars.shuffle()*""
end

# 7
# ! str.delete!("^a-z") == str.reverse()

def is_downcase_palindrome?(str)
    lambda{ |str| str == str.reverse()}.(str.delete("^a-z"))
end

# 14

def sort_by_length(str)
    (str.split().sort_by {|word| word.length()})*" "
end

# 5.2

def max_sequence_of_kirillic_length(str)
    str.split(/[^А-Яа-я]+/).max {|word| word.length()}.length()
end

# 7.2

def max_number(str)
    str.split(/[^1-9]+/).sort.max {|word| word.length()}.to_i()
end

# 14.2

def max_sequence_of_digits_length(str)
    str.split(/[^1-9]+/).max {|word| word.length()}.length()
end

# 2

def find_date(str)
    str.scan(//) # когда-нибудь доделать
end

def sort_by_avg_ascii(strs)
    strs.sort_by {|str| str.bytes.sum() / str.length()}
end

functions = [
    'puts("перемешанная строка:")
     puts(string_shuffle(str[0]))',
    'puts("образуют ли прописные символы палиндром?")
     puts(is_downcase_palindrome?(str[0]))',
    'puts("отсортированная строка:")
     puts(sort_by_length(str[0]))',
    'puts("наибольшее количество символов кириллицы подряд:")
     puts(max_sequence_of_kirillic_length(str[0]))',
    'puts("наименьшее натуральное число в строке:")
     puts(max_number(str[0]))',
    'puts("наибольшее количество цифр подряд:")
     puts(max_sequence_of_digits_length(str[0]))',
     'p sort_by_avg_ascii(str)'
]

begin
    func_choice = Integer(ARGV[0])
    input_choice = ARGV[1]
    input_file_name = ARGV[2]
    ARGV.clear()
    if (func_choice >= 1 && func_choice <= 7) then
        case
        when input_choice == "-k"
            puts("введите строку:")
            str = gets.chomp()
        when input_choice == "-f" 
            input = File.new(input_file_name + ".txt")
            str = input.read.split(/\n/)
        else
            puts("мысли я не читаю")
        end

        eval(functions[func_choice - 1])
    
    else
        puts("hello world")
    end

end
